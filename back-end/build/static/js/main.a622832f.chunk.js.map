{"version":3,"sources":["component/Drawer.js","component/Navbar.js","pages/home.js","assets/avatar.png","component/listTable.jsx","graphql/queries/professor.js","pages/recommendation.jsx","graphql/mutations/professor.js","component/professorsList.jsx","pages/profList.jsx","pages/profDetails.jsx","utils/index.js","pages/addProfessor.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","link","textDecoration","color","fontSize","icon","container","width","DrawerComponent","classes","useState","openDrawer","setOpenDrawer","Drawer","open","onClose","anchor","List","className","ListItem","ListItemText","onClick","to","Divider","IconButton","theme","navlinks","marginLeft","spacing","display","logo","flexGrow","cursor","fontStyle","Navbar","push","useHistory","useTheme","isMobile","useMediaQuery","breakpoints","down","AppBar","position","style","background","CssBaseline","Toolbar","Typography","variant","Home","Button","contained","BasicTable","professors","isEmpty","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","isArray","map","i","name","email","_id","photo","researchAreas","border","scope","src","Dummy","alt","toString","GET_PROFESSORS","gql","GET_PROFESSOR","GET_RECOMMENDATION","expertiseAreas","Recommendation","useLazyQuery","getProfessors","data","loading","setProfessors","findLastKey","showResults","setShowResults","dept","keyword","state","setState","researchAreasList","setResearchAreasList","handleChange","target","value","filter","field","useEffect","recommendations","onSubmit","e","preventDefault","variables","department","FormControl","InputLabel","id","Select","labelId","label","required","onChange","MenuItem","FormHelperText","area","Chip","margin","onDelete","a","TextField","placeholder","type","CircularProgress","size","ADD_PROFESSOR","ADD_PROFESSORS","EDIT_PROFESSOR","DELETE_PROFESSOR","ProfessorsList","refetch","useMutation","deleteProfessor","marginBottom","introduction","defaultProps","ProfList","error","all","ProfDetails","useParams","getProfessor","professor","setProfessor","details","padding","window","history","back","marginTop","blobToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","AddProfessor","edit","flag","addProfessor","editProfessor","response","undefined","setFile","intro","res","console","log","handleUpload","files","URL","createObjectURL","base64String","handleUploadExcel","schema","prop","String","readXlsxFile","then","rows","errors","axios","post","catch","alert","el","includes","fullWidth","multiline","height","objectFit","borderRadius","hidden","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.a622832f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n    Divider,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles(()=>({\n    link:{\n        textDecoration:\"none\",\n        color: \"#7c2424\",\n        fontSize: \"20px\",\n    },\n    icon:{\n        color: \"white\"\n    },\n    container: {\n      width: '300px',\n    }\n}));\n\nfunction DrawerComponent() {\n    const classes = useStyles();\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <>\n      <Drawer\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n        anchor=\"right\"\n      >\n        <List className={classes.container}>\n        <ListItem>\n            <ListItemText>\n              <h2 className=\"heading\">FINUS</h2>\n            </ListItemText>\n          </ListItem>\n        <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/\" className={classes.link}>Home</Link>\n            </ListItemText>\n          </ListItem>\n          <Divider/>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/recommendation\" className={classes.link}>Recommendation</Link>\n            </ListItemText>\n          </ListItem>\n          <Divider/>\n          <ListItem onClick={() => setOpenDrawer(false)}>\n            <ListItemText>\n              <Link to=\"/profList\" className={classes.link}>Professor List</Link>\n            </ListItemText>\n          </ListItem>\n          <Divider/>\n          <Divider/>\n        </List>\n      </Drawer>\n      <IconButton onClick={() => setOpenDrawer(!openDrawer)}className={classes.icon}>\n        <MenuIcon />\n      </IconButton>\n    </>\n  );\n}\nexport default DrawerComponent;\n","import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  CssBaseline,\n  Typography,\n  makeStyles,\n  useTheme,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport DrawerComponent from \"./Drawer\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  navlinks: {\n    marginLeft: theme.spacing(5),\n    display: \"flex\",\n  },\n  logo: {\n    flexGrow: \"1\",\n    cursor: \"pointer\",\n    fontStyle: 'italic'\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"white\",\n    fontSize: \"20px\",\n    marginLeft: theme.spacing(8),\n    \"&:hover\": {\n      color: \"yellow\",\n    },\n  },\n}));\n\nfunction Navbar() {\n  const classes = useStyles();\n  const {push} = useHistory()\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  return (\n    <AppBar position=\"static\" style={{background: '#7c2424'}}>\n      <CssBaseline />\n      <Toolbar>\n        <Typography variant=\"h4\" onClick={() => push('/')} className={classes.logo}>\n          FINUS\n        </Typography>\n        {isMobile ? (\n          <DrawerComponent />\n        ) : (\n          <div className={classes.navlinks}>\n            <Link to=\"/\" className={classes.link}>\n              Home\n            </Link>\n            <Link to=\"/recommendation\" className={classes.link}>\n            Recommendation\n            </Link>\n            <Link to=\"/profList\" className={classes.link}>\n            Professor List\n            </Link>\n          </div>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n}\nexport default Navbar;\n","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from 'react-router-dom';\n\nexport const Home = () => {\n  const {push} = useHistory()\n  return(\n  <div className='home-con'>\n    <h1 className='center-text'>\n    Welcome To <bold>FINUS</bold>\n    </h1>\n    <h1 className='center-text'>Here you can FINd Ur Supervisor for better Ph.D career!</h1>\n    <div className='container'>\n    <Button classes={{contained: 'main-btn'}} variant=\"contained\" onClick={() => push('/recommendation')}>Find SUPERVISOR now</Button>\n    </div>\n  </div>\n)}","export default __webpack_public_path__ + \"static/media/avatar.00a3e064.png\";","import React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@material-ui/core';\nimport Dummy from '../assets/avatar.png'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport { isArray, isEmpty } from 'lodash';\n\nexport default function BasicTable({professors}) {\n  const {push} = useHistory()\n\n  return (\n    <>\n    {isEmpty(professors) ? <h1 className=\"rec-text\">No result found!</h1> : <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Index</TableCell>\n            <TableCell align=\"right\">Professor's Picture</TableCell>\n            <TableCell align=\"right\">Professor's Details</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {isArray(professors) && professors.map(({ name, email, _id,photo, researchAreas }, i) => (\n            <TableRow\n              key={i}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" align='center' scope=\"row\">\n                <b>{i + 1}</b>\n              </TableCell>\n              <TableCell align=\"center\"><img src={photo || Dummy} className=\"pic\" alt=\"\" /></TableCell>\n              <TableCell align=\"left\">\n                <div className='table-details-con'>\n                  <div className='details-con-small'>\n                    Name: {name}\n                    <br />\n                    Email: {email}\n                    <br />\n                    Interests: {researchAreas.toString()}\n                  </div>\n                  <div>\n                    <Button classes={{ contained: 'main-btn' }} onClick={() => push(`/profDetails/${_id}`)} style={{marginLeft: '15px'}} variant=\"contained\" >Details</Button>\n                  </div>\n                </div>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>}\n    </>\n  );\n}\n","import {\n  gql\n} from '@apollo/client';\n\nexport const GET_PROFESSORS = gql `\nquery Query {\n    professors {\n        name\n        email\n        photo\n        researchAreas\n        introduction\n        department\n        _id\n      }\n  }\n  `;\n\nexport const GET_PROFESSOR = gql `\nquery professor($id: String!) {\n  professor(id: $id) {\n    name\n    email\n    photo\n    researchAreas\n    department\n    introduction\n    _id\n  }\n}\n`;\n\nexport const GET_RECOMMENDATION = gql `\nquery recommendations( $researchAreas: [String!],  $department: String!, $keyword: String!) {\n  recommendations(researchAreas: $researchAreas, department: $department, keyword: $keyword) {\n    name\n    email\n    photo\n    researchAreas\n    department\n    introduction\n    _id\n  }\n}\n`;","import { useLazyQuery } from \"@apollo/client\";\nimport { InputLabel, MenuItem, FormHelperText, FormControl, Select, TextField, Button, Chip, CircularProgress } from \"@material-ui/core\";\nimport { findLastKey, isArray, isEmpty } from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport BasicTable from \"../component/listTable\";\nimport { GET_RECOMMENDATION } from \"../graphql/queries/professor\";\n\nconst expertiseAreas = [\n  'Algorithms & Theory',\n  'Artificial Intelligence',\n  'Computational Biology',\n  'Computational Social Science',\n  'Data Science & Business Analytics',\n  'Database',\n  'Digital Transformation, Platforms & Innovation',\n  'Fintech',\n  'Healthcare Informatics',\n  'Intelligent Systems',\n  'Media',\n  'Programming Languages & Software Engineering',\n  'Security',\n  'Systems & Networking'\n]\n\nexport default function Recommendation() {\n\n  const [getProfessors, { data, loading }] = useLazyQuery(GET_RECOMMENDATION)\n  const [professors, setProfessors] = useState([])\n  const [showResults, setShowResults] = useState(findLastKey)\n  const [state, setState] = useState({\n    dept: '',\n    researchAreas: [],\n    keyword: ''\n  })\n\n\n  const [researchAreasList, setResearchAreasList] = useState([\n    'All Areas',\n    'Algorithms & Theory',\n    'Artificial Intelligence',\n    'Computational Biology',\n    'Computational Social Science',\n    'Data Science & Business Analytics',\n    'Database',\n    'Digital Transformation, Platforms & Innovation',\n    'Fintech',\n    'Healthcare Informatics',\n    'Intelligent Systems',\n    'Media',\n    'Programming Languages & Software Engineering',\n    'Security',\n    'Systems & Networking'\n  ])\n\n  const { dept, researchAreas, keyword } = state;\n\n  const handleChange = ({ target: { value, name } }) => {\n    if (name === 'researchAreas') {\n      if (value === 'All Areas') {\n        setState({ ...state, [name]: ['All Areas'] });\n        setResearchAreasList([...researchAreasList.filter((field) => field === value)])\n      }\n      else { setResearchAreasList([...researchAreasList.filter((field) => field !== value)]) }\n      setState({ ...state, [name]: [...researchAreas, value] });\n    } else {\n      setState({ ...state, [name]: value });\n    }\n  }\n\n  const handleSearch = (e) => {\n    e.preventDefault()\n    getProfessors(({ variables: { researchAreas, department: dept, keyword } }))\n  }\n\n  useEffect(() => {\n    if (!isEmpty(data)) {\n      const { recommendations } = data;\n      setProfessors(recommendations)\n      setShowResults(true)\n    }\n  }, [data])\n\n  return (\n    <div className=\"container\">\n      <div>\n        <h1 className=\"rec-text\">{showResults ? 'Top Recommendations' : 'Get Recommendations'}</h1>\n        {showResults ? <BasicTable professors={professors} /> :\n          <form onSubmit={handleSearch}>\n            <FormControl>\n              <InputLabel id=\"demo-simple-select-helper-label\">Department</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-helper-label\"\n                id=\"demo-simple-select-helper\"\n                value={dept}\n                label=\"dept\"\n                required\n                name=\"dept\"\n                onChange={handleChange}\n                style={{ width: '320px' }}\n              >\n                <MenuItem value=\"Computer Science\">Computer Science</MenuItem>\n                <MenuItem value=\"Information Systems and Analytics\">Information Systems and Analytics</MenuItem>\n                <MenuItem value=\"both\">Both</MenuItem>\n              </Select>\n              <FormHelperText>Please choose related department</FormHelperText>\n            </FormControl>\n            <br />\n            <div className=\"chip-con\">\n              {isArray(researchAreas) && researchAreas.map((area, i) => (\n                <Chip\n                  label={area}\n                  key={i}\n                  style={{ margin: '5px' }}\n                  onDelete={(value) => {\n                    setState({ ...state, researchAreas: [...researchAreas.filter((a) => a !== area)] })\n                    area === 'All Areas' ? setResearchAreasList([area, ...expertiseAreas])\n                      : setResearchAreasList([...researchAreasList, area])\n                  }}\n                />\n              ))}\n            </div>\n            <FormControl>\n              <InputLabel id=\"demo-simple-select-helper-label\">Research Areas</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-helper-label\"\n                id=\"demo-simple-select-helper\"\n                label=\"Research Areas\"\n                name=\"researchAreas\"\n                required\n                onChange={handleChange}\n                style={{ width: '320px' }}\n              >\n                {researchAreasList.map((field, i) => (\n                  <MenuItem value={field} key={i}>{field}</MenuItem>\n                ))}\n              </Select>\n              <FormHelperText>Please choose one of your research areas</FormHelperText>\n            </FormControl>\n            <br />\n            <TextField id=\"standard-basic\" value={keyword} onChange={handleChange} name=\"keyword\" style={{ width: '320px' }} placeholder=\"You can also enter keywords for better matching\" label=\"Keyword\" variant=\"standard\" />\n            <br />\n            <br />\n            <div className='container'>\n              <Button classes={{ contained: 'main-btn' }} type=\"submit\" variant=\"contained\" >\n                {loading ? <CircularProgress size={15} style={{ color: 'white' }} /> : 'Find SUPERVISORS'}</Button>\n            </div>\n          </form>}\n      </div>\n    </div>\n  );\n}","import { gql } from '@apollo/client';\n\nexport const ADD_PROFESSOR = gql`\nmutation addProfessor($name: String!, $researchAreas: [String!], $photo: String!, $email: String!, $department: String!, $introduction: String!) {\n  addProfessor(name: $name, photo: $photo,researchAreas: $researchAreas, email: $email, department: $department, introduction: $introduction) {\n    _id\n  }\n}\n`;\n\nexport const ADD_PROFESSORS = gql`\nmutation addProfessors($professorsList: [Object!]) {\n  addProfessors(professorsList: $professorsList) {\n    _id\n  }\n}\n`;\n\nexport const EDIT_PROFESSOR = gql`\nmutation editProfessor($id: String!, $name: String!, $researchAreas: [String!], $photo: String!, $email: String!, $department: String!, $introduction: String!) {\n  editProfessor(id: $id, name: $name, photo: $photo,researchAreas: $researchAreas, email: $email, department: $department, introduction: $introduction) {\n    _id\n  }\n}\n`;\n\nexport const DELETE_PROFESSOR = gql`\nmutation deleteProfessor($id: String!) {\n  deleteProfessor(id: $id) {\n    _id\n  }\n}\n`;","import React, { useEffect } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@material-ui/core';\nimport Dummy from '../assets/avatar.png'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport PropTypes from 'prop-types'\nimport { isArray, isEmpty } from 'lodash';\nimport { useMutation } from '@apollo/client';\nimport { DELETE_PROFESSOR } from '../graphql/mutations/professor';\n\nexport default function ProfessorsList({ professors, refetch }) {\n    const [deleteProfessor, { data }] = useMutation(DELETE_PROFESSOR)\n    const { push } = useHistory()\n\n    const handleDelete = (id) => {\n        deleteProfessor(({ variables: { id } }))\n    }\n\n    useEffect(() => {\n        if (!isEmpty(data)) {\n            refetch()\n        }\n    }, [data])\n    return (\n        <>\n            <Button classes={{ contained: 'main-btn' }} onClick={() => push('/add/123')} style={{ marginBottom: '15px' }} variant=\"contained\" >ADD PROFESSOR</Button>\n            {isEmpty(professors) ? <h1 className=\"rec-text\">Nothing here</h1> : <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Index</TableCell>\n                            <TableCell align=\"center\">Name</TableCell>\n                            <TableCell align=\"center\">Email</TableCell>\n                            <TableCell align=\"center\">Research Areas</TableCell>\n                            <TableCell align=\"center\">Introduction</TableCell>\n                            <TableCell align=\"center\">Photo</TableCell>\n                            <TableCell align=\"center\">Operations</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {isArray(professors) && professors.map(({ photo, name, email, introduction, researchAreas, _id }, i) => (\n                            <TableRow\n                                key={i}\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                            >\n                                <TableCell component=\"th\" align='center' scope=\"row\">\n                                    <b>{i + 1}</b>\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                    {name}\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                    {email}\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                    {researchAreas.toString()}\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                    {introduction}\n                                </TableCell>\n                                <TableCell align=\"center\"><img src={photo || Dummy} className=\"pic\" alt=\"\" /></TableCell>\n                                <TableCell align=\"center\">\n                                    <Button classes={{ contained: 'main-btn' }} onClick={() => handleDelete(_id)} variant=\"contained\" >Delete</Button>\n                                    <Button classes={{ contained: 'main-btn' }} style={{ marginLeft: '10px' }} onClick={() => push(`/edit/${_id}`)} variant=\"contained\" >Edit</Button>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>}\n        </>\n    );\n}\n\nProfessorsList.propTypes = {\n    professors: PropTypes.instanceOf(Array),\n    refetch: PropTypes.func,\n}\nProfessorsList.defaultProps = {\n    professors: [],\n    refetch: () => { },\n}","import React, { useEffect, useState } from 'react'\nimport { useLazyQuery } from '@apollo/client';\nimport ProfessorsList from '../component/professorsList'\nimport { GET_PROFESSORS } from '../graphql/queries/professor';\nimport {isEmpty} from 'lodash'\n\nexport const ProfList = () => {\n\n  const [getProfessors, {data, error, refetch = () => {} }] = useLazyQuery(GET_PROFESSORS);\n  const [professors, setProfessors] = useState({})\n  useEffect(() => {\n    getProfessors() && refetch()\n  }, [])\n\n  useEffect(() => {\n    if(!isEmpty(data)){\n      const {professors: all} = data\n      setProfessors(all)\n    }\n  }, [data])\n  return (\n    <div className=\"container\">\n      <div>\n        <h1 className=\"rec-text\">Professor List</h1>\n        <ProfessorsList professors={professors} refetch={refetch} />\n      </div>\n    </div>)\n\n}\n","import { useLazyQuery } from \"@apollo/client\";\nimport { TableContainer, Paper, Button } from \"@material-ui/core\";\nimport { isArray, isEmpty } from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport Dummy from '../assets/avatar.png'\nimport { GET_PROFESSOR } from \"../graphql/queries/professor\";\n\nfunction ProfDetails() {\n    const {id} = useParams()\n    const [getProfessor, {data, loading, error}] = useLazyQuery(GET_PROFESSOR)\n    const [professor, setProfessor] = useState({})\n\n    useEffect(() => {\n        if(!isEmpty(id)){\n            getProfessor(({variables: {id}}))\n        }\n    }, [])\n\n    useEffect(() => {\n        if(!isEmpty(data)){\n            const {professor: details} = data;\n            setProfessor(details)\n        }\n    }, [data])\n    return (\n        <div style={{ padding: '20px' }}>\n            <h1 className=\"rec-text\">Professor's Details</h1>\n            <Button classes={{ contained: 'main-btn' }} onClick={() => window.history.back()} style={{ marginLeft: '15px' }} variant=\"contained\" >Back to Recommendations</Button>\n            {loading ? <h2>Loading</h2> : error ? <h2>Professor not found</h2> : <TableContainer component={Paper} style={{ marginTop: '20px' }}>\n                <div className=\"main-details-con\">\n                    <img src={professor.photo || Dummy} alt=\"\" className=\"main-img\" />\n                        <div className='details-margin'>\n                            Name: {professor.name}\n                            <br />\n                            Email: {professor.email}\n                            <br />\n                            Research Areas: \n                            <ol className=\"list-margin\">\n                            {isArray(professor) && professor.researchAreas.map((field, i) => (\n                                <li>{field}</li>\n                            ))}\n                            </ol>\n                            Introduction: \n                            <div className=\"intro\">\n                                {professor.introduction}\n                            </div>\n                        </div>\n                </div>\n            </TableContainer>}\n        </div>\n    )\n}\nexport default ProfDetails;\n","export const blobToBase64 = (file) => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = () => resolve(reader.result);\n  reader.onerror = (error) => reject(error);\n});\n","/* eslint-disable no-unused-expressions */\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\nimport { InputLabel, MenuItem, FormHelperText, FormControl, Select, TextField, Button, Chip, CircularProgress } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport BasicTable from \"../component/listTable\";\nimport { blobToBase64 } from '../utils'\nimport { ADD_PROFESSOR, ADD_PROFESSORS, EDIT_PROFESSOR } from \"../graphql/mutations/professor\";\nimport { GET_PROFESSOR } from \"../graphql/queries/professor\";\nimport { isEmpty } from \"lodash\";\nimport readXlsxFile from 'read-excel-file'\nimport axios from 'axios'\n\nexport default function AddProfessor({ edit }) {\n    const { flag } = useParams()\n    const { push } = useHistory()\n    const { id } = useParams()\n\n    const [addProfessor, { data, loading, error }] = useMutation(ADD_PROFESSOR)\n    const [addProfessors,resp] = useMutation(ADD_PROFESSORS)\n    const [editProfessor, response] = useMutation(EDIT_PROFESSOR)\n\n    const [researchAreasList, setResearchAreasList] = useState([\n        'Algorithms & Theory',\n        'Artificial Intelligence',\n        'Computational Biology',\n        'Computational Social Science',\n        'Data Science & Business Analytics',\n        'Database',\n        'Digital Transformation, Platforms & Innovations',\n        'Fintech',\n        'Healthcare Informatics',\n        'Healthcare Informatics',\n        'Intelligent Systems',\n        'Media',\n        'Programming Languages & Software Engineering',\n        'Security',\n        'Systems & Networking'\n    ])\n    const [file, setFile] = useState(undefined);\n    const [state, setState] = useState({\n        name: '',\n        email: '',\n        dept: '',\n        intro: '',\n        researchAreas: [],\n        photo: '',\n    })\n\n    const [getProfessor, res] = useLazyQuery(GET_PROFESSOR)\n\n    useEffect(() => {\n        edit && getProfessor(({ variables: { id } })) && console.log('fetching')\n    }, [])\n\n    useEffect(() => {\n        if (!isEmpty(data)) {\n            push('/profList')\n        }\n    }, [data])\n\n    useEffect(() => {\n        if (!isEmpty(response.data)) {\n            push('/profList')\n        }\n    }, [response.data])\n\n    const { dept, researchAreas, intro, name, email, photo } = state\n\n    const handleChange = ({ target: { value, name } }) => {\n        if (name === 'researchAreas') {\n            setState({ ...state, [name]: [...researchAreas, value] });\n            setResearchAreasList([...researchAreasList.filter((field) => field !== value)])\n        } else {\n            setState({ ...state, [name]: value });\n        }\n    };\n\n    const handleUpload = async ({ target: { files } }) => {\n        setFile(URL.createObjectURL(files[0]));\n        const base64String = await blobToBase64(files[0]);\n        setState({ ...state, photo: base64String });\n    }\n\n\n    const handleUploadExcel = async ({ target: { files } }) => {\n        const schema = {\n            'name': {\n              // JSON object property name.\n              prop: 'name',\n              type: String\n            },\n            'email': {\n              prop: 'email',\n              type: String,\n            },\n            'photo': {\n                // JSON object property photo.\n                prop: 'photo',\n                type: String\n              },\n              'department': {\n                prop: 'department',\n                type: String,\n              },\n              'research': {\n                prop: 'researchAreas',\n                type: String,\n              },\n              'context': {\n                prop: 'introduction',\n                type: String,\n              },\n          }\n          \n          readXlsxFile(files[0], { schema }).then(({ rows, errors }) => {\n            axios.post('/addProfessors', {\n                data: rows\n              })\n              .then((response) => {\n                push('/profList')\n              })\n              .catch((error) => {\n                alert('An error has been occured while uploading excel list')\n              });     \n          })\n    } \n\n    const handleAdd = (e) => {\n        e.preventDefault()\n       try {\n        if (edit) {\n            editProfessor(({ variables: { id, name, email, department: dept, introduction: intro, photo, researchAreas } }))\n        }\n        else {\n            addProfessor(({ variables: { name, email, department: dept, introduction: intro, photo, researchAreas } }))\n        }\n       } catch (error) {\n           alert('Email is already in use')\n       }\n    }\n    useEffect(() => {\n        if (!isEmpty(res.data)) {\n            const { professor } = res.data;\n            setState({ ...state, ...professor, intro: professor.introduction || '', dept: professor.department })\n            setFile(professor.photo)\n            setResearchAreasList(researchAreasList.filter((el) => !professor.researchAreas.includes(el)))\n        }\n    }, [res.data])\n    return (\n        <div className=\"container\">\n            <div>\n                <h1 className=\"rec-text\">{edit ? \"Edit Professor's Details\" : \"Add Professor's Details\"}</h1>\n                {flag === '1' ? <BasicTable /> : <form onSubmit={handleAdd}>\n                    <TextField\n                        id=\"standard-basic\"\n                        onChange={handleChange}\n                        value={name}\n                        name=\"name\"\n                        required\n                        fullWidth label=\"Professor's Name\"\n                        variant=\"standard\" />\n                    <br />\n                    <br />\n                    <TextField\n                        id=\"standard-basic\"\n                        type=\"email\"\n                        fullWidth\n                        required\n                        onChange={handleChange}\n                        value={email}\n                        name=\"email\"\n                        label=\"Professor's Email\"\n                        variant=\"standard\" />\n                    <br />\n                    <br />\n                    <TextField\n                        id=\"standard-textarea\"\n                        label=\"Introduction\"\n                        placeholder=\"Write a brief intro of professor\"\n                        multiline\n                        name=\"intro\"\n                        required\n                        onChange={handleChange}\n                        value={intro}\n                        variant=\"standard\"\n                        fullWidth\n                    />\n                    <br />\n                    <br />\n                    <div className=\"chip-con\">\n                        {researchAreas.map((area, i) => (\n                            <Chip\n                                label={area}\n                                key={i}\n                                style={{ margin: '5px' }}\n                                onDelete={(value) => {\n                                    setState({ ...state, researchAreas: [...researchAreas.filter((a) => a !== area)] })\n                                    setResearchAreasList([...researchAreasList, area])\n                                }}\n                            />\n                        ))}\n                    </div>\n                    <FormControl>\n                        <InputLabel id=\"demo-simple-select-helper-label\">Research Areas</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-helper-label\"\n                            id=\"demo-simple-select-helper\"\n                            label=\"Research Areas\"\n                            name=\"researchAreas\"\n                            required={!edit}\n                            onChange={handleChange}\n                            style={{ width: '320px' }}\n                        >\n                            {researchAreasList.map((field, i) => (\n                                <MenuItem value={field} key={i}>{field}</MenuItem>\n                            ))}\n                        </Select>\n                        <FormHelperText>Please choose one of your research areas</FormHelperText>\n                    </FormControl>\n                    <br />\n                    <FormControl>\n                        <InputLabel id=\"demo-simple-select-helper-label\">Department</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-helper-label\"\n                            id=\"demo-simple-select-helper\"\n                            required\n                            value={dept}\n                            label=\"dept\"\n                            name=\"dept\"\n                            onChange={handleChange}\n                            style={{ width: '320px' }}\n                        >\n                            <MenuItem value=\"Computer Science\">Computer Science</MenuItem>\n                            <MenuItem value=\"Information Systems and Analytics\">Information Systems and Analytics</MenuItem>\n                            <MenuItem value=\"both\">Both</MenuItem>\n                        </Select>\n                        <FormHelperText>Please choose related department</FormHelperText>\n                    </FormControl>\n                    <br />\n                    <br />\n                    {file !== undefined && <img src={file} style={{ height: '320px', width: '320px', objectFit: 'cover', borderRadius: '10px' }} alt=\"\" />}\n                    <br />\n                    <br />\n                    <div className=\"container\">\n                        <Button\n                            variant=\"contained\"\n                            component=\"label\"\n                            classes={{ contained: 'main-btn' }}\n                            style={{ marginBottom: '10px' }}\n                        >\n                            Upload Picture\n                            <input\n                                type=\"file\"\n                                hidden\n                                onChange={handleUpload}\n                            />\n                        </Button>\n                    </div>\n\n                    <div className=\"container\">\n                        <Button\n                            variant=\"contained\"\n                            component=\"label\"\n                            classes={{ contained: 'main-btn' }}\n                            style={{ marginBottom: '10px' }}\n                        >\n                            Upload Excel file\n                            <input\n                                type=\"file\"\n                                hidden\n                                onChange={handleUploadExcel}\n                            />\n                        </Button>\n                    </div>\n                    <div className='container'>\n                        <Button classes={{ contained: 'main-btn' }} type=\"submit\" variant=\"contained\" >\n                            {loading || response.loading ? <CircularProgress size={15} style={{ color: 'white' }} /> : 'SAVE'}\n                        </Button>\n                    </div></form>}\n            </div>\n        </div >\n    );\n}","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./component/Navbar\";\nimport {Home }from \"./pages/home\";\nimport Recommendation from \"./pages/recommendation\";\nimport {ProfList} from \"./pages/profList\";\nimport './App.css'\nimport ProfDetails from \"./pages/profDetails\";\nimport AddProfessor from \"./pages/addProfessor\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/recommendation/:flag?\" component={Recommendation} />\n        <Route path=\"/profList\" component={ProfList} />\n        <Route path=\"/profDetails/:id\" component={ProfDetails} />\n        <Route path=\"/add/:id\" component={AddProfessor} />\n        <Route path=\"/edit/:id\" component={() => (<AddProfessor edit={true} />)} />\n      </Switch>\n    </Router>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n} from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:3000/graphql',\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <React.StrictMode>\n      <ApolloProvider client={client}>\n          <App />\n       </ApolloProvider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}